generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model appointment {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String             @db.Uuid
  bike_id          String             @db.Uuid
  date             DateTime           @db.Timestamp(6)
  time             DateTime           @db.Timestamp(6)
  status           String             @db.VarChar(30)
  notes            String?            @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  bike             bike               @relation(fields: [bike_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service_engineer service_engineer[]
  service_manager  service_manager[]
}

model bike {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String        @db.Uuid
  make        String        @db.VarChar(50)
  model       String        @db.VarChar(50)
  year        Int
  color       String        @db.VarChar(30)
  vin_number  String        @unique @db.VarChar(17)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  appointment appointment[]
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  address     String?  @db.VarChar(255)
  city        String?  @db.VarChar(50)
  state       String?  @db.VarChar(50)
  zip_code    String?  @db.VarChar(10)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model service_engineer {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String      @db.Uuid
  appointment_id String      @db.Uuid
  experience     Int
  specialization String      @db.VarChar(100)
  availability   String      @db.VarChar(30)
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime    @default(now()) @db.Timestamp(6)
  appointment    appointment @relation(fields: [appointment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model service_manager {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String      @db.Uuid
  appointment_id   String      @db.Uuid
  experience       Int
  management_level String      @db.VarChar(30)
  availability     String      @db.VarChar(30)
  created_at       DateTime    @default(now()) @db.Timestamp(6)
  updated_at       DateTime    @default(now()) @db.Timestamp(6)
  appointment      appointment @relation(fields: [appointment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  appointment      appointment[]
  bike             bike[]
  company          company[]
  service_engineer service_engineer[]
  service_manager  service_manager[]
}
